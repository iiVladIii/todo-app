version: '3'

networks:
    frontend:
    backend:

volumes:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    postgres_data:

services:
    sonarqube:
        image: sonarqube:community
        hostname: sonarqube
        container_name: sonarqube
        restart: unless-stopped
        labels:
            - autoheal=true
        ports:
            - '9000:9000'
        environment:
            - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
            - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
            - SONAR_JDBC_USERNAME=sonar
            - SONAR_JDBC_PASSWORD=sonar
            - SONAR_WEB_PORT=9000
        volumes:
            - 'sonarqube_data:/opt/sonarqube/data'
            - 'sonarqube_extensions:/opt/sonarqube/extensions'
            - 'sonarqube_logs:/opt/sonarqube/logs'
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
            nproc:
                soft: 4096
                hard: 4096
        networks:
            - frontend
            - backend
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres:13
        container_name: sonarqube_postgres
        restart: unless-stopped
        stop_grace_period: '3s'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            POSTGRES_DB: sonarqube
        volumes:
            - 'postgres_data:/var/lib/postgresql/data'
        networks:
            - backend

    autoheal:
        image: willfarrell/autoheal:1.2.0
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        environment:
            AUTOHEAL_CONTAINER_LABEL: autoheal
            AUTOHEAL_START_PERIOD: 600
            AUTOHEAL_INTERVAL: 30
