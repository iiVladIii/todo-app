name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
        include:
          - service: backend
            image_name: ivladii/todo-backend-dev
            context: ./backend
            build_args: "MODE=${{ vars.MODE }}"
          - service: frontend
            image_name: ivladii/todo-frontend-dev
            context: ./frontend
            build_args: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Print environment variable
        if: matrix.service == 'backend'
        run: echo "My variable value is ${{ vars.MODE }}"

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: ${{ matrix.build_args }}
          tags: |
            ${{ matrix.image_name }}:latest
            ${{ matrix.image_name }}:${{ github.sha }}
  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Update deployment manifests
        run: |
          sed -i "s|ivladii/todo-backend-dev:.*|ivladii/todo-backend-dev:${{ github.sha }}|g" k8s/deployments/*.yml
          sed -i "s|ivladii/todo-frontend-dev:.*|ivladii/todo-frontend-dev:${{ github.sha }}|g" k8s/deployments/*.yml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/backend-deploy -n todo-app-deploy
          kubectl rollout status deployment/frontend-deploy -n todo-app-deploy
